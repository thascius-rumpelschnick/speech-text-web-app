version: "3.9"

services:

  nginx:
    image: nginx:latest
    container_name: speech_text_nginx_prod
    restart: "no"
    working_dir: /django_application
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./public:/var/www/public:cached
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:cached
    depends_on:
      - python
    networks:
      - speech_text_prod_network

  python:
    build:
      context: .
      dockerfile: ./docker/python/Dockerfile
    container_name: speech_text_python_prod
    restart: "no"
    working_dir: /django_application
    ports:
      - "9876:8000"
    volumes:
      - .:/django_application
    command: ["sh", "-c", "python manage.py migrate && python manage.py collectstatic --noinput --clear && gunicorn --workers=4 --bind 0.0.0.0:8000 config.wsgi:application"]
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings
    env_file:
      - .env
    depends_on:
      - postgres
    networks:
      - speech_text_prod_network

  postgres:
    image: postgres:latest
    container_name: speech_text_postgresql_prod
    restart: "no"
    ports:
      - "9875:5432"
    volumes:
      - speech_text_prod_postgres-db:/var/lib/postgresql/data
    env_file:
      - .env
    networks:
      - speech_text_prod_network

  node:
    build: ./docker/node
    container_name: speech_text_node_prod
    working_dir: /django_application
    restart: "no"
    ports:
      - "9874:6006"
    volumes:
      - ./assets:/django_application:cached
    command: ["sh", "-c", "npm i && npm run build-prod"]
    # command: tail -f /dev/null

volumes:
  speech_text_prod_postgres-db:

networks:
  speech_text_prod_network:
